/**
 * Generates a summary of client progress, struggles, and a coaching insight based on recent check-ins.
 *
 * This function sends the provided check-in entries to the Playlab API, which uses an AI model to analyze
 * and summarize the client's journey. The summary is intended to help coaches quickly understand the client's
 * current state and identify actionable insights.
 *
 * @param checkins - An array of check-in strings retrieved from the Airtable database.
 * Currently using dummy data until I get the real Airtable data.
 * Each entry should represent a recent update from the client, detailing their progress and challenges.
 * @returns A promise that resolves to a summary string generated by the Playlab API.
 *
 * @throws Will throw an error if the Playlab API request fails or returns an invalid response.
 */
export const getPlaylabSummary = async (checkins: string[]) => {
  const messages = [
    {
      role: 'system',
      content: `You are IsaBot, a coaching assistant. Based on the last few check-ins from the airtable database, 
  summarize how the client is progressing, what they are struggling with, and one insight for the coach to follow up on..`,
    },
    {
      role: 'user',
      content: checkins.map((entry, i) => `Entry ${i + 1}: ${entry}`).join('\n\n'),
    },
  ];

  try {
    const response = await fetch('https://api.playlab.ai/v1/chat/completions', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        Authorization: `Bearer ${process.env.PLAYLAB_API_KEY}`,
      },
      body: JSON.stringify({
        model: 'gpt-4',
        project_id: process.env.PLAYLAB_PROJECT_ID,
        messages,
        temperature: 0.7,
        stream: false,
      }),
    });

    const data = await response.json();

    return data.choices?.[0]?.message?.content ?? 'No summary returned.';
  } catch (error) {
    console.error('Playlab API error:', error);
    throw new Error('Failed to fetch summary from Playlab');
  }
};
